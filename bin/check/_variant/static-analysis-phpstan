#!/usr/bin/env sh

# Do not modify this file - this file is created by bin/wrapper/dist-sync and will be overriden every time dist-sync is invoked.
# see https://gitlab.brainbits.net/docker/dist/-/blob/master/README.md

. "$(dirname $0)/../../config"

cmd=$*

if [ $# -eq 0 ]; then
    if [ ! -f "${DIR}/phpstan.neon.dist" ] && [ ! -f "${DIR}/phpstan.neon" ]; then
        printf "${failure}No phpstan.neon.dist file found in project root!${reset}\n"
        printf "You can use this snippet as a starting point:\n"
        printf "<snip>\n"
        printf "parameters:\n"
        printf "    level: max\n"
        printf "    inferPrivatePropertyTypeFromConstructor: true\n"
        printf "    paths:\n"
        printf "        - src\n"
        printf "        - tests\n"
        printf "    autoload_files:\n"
        printf "        - /usr/bin/${PHPUNIT_CMD:=phpunit}\n"
        printf "#        If you are using phpunit >= 9.1 and want to use prophecy, uncomment\n"
        printf "#        - /usr/lib/tools/phpunit.d/prophecy-phpunit-extension-v2.0.0.phar\n"
        printf "#    ignoreErrors:\n"
        printf "#        - '#FooBar#'\n"
        printf "#    excludes_analyse:\n"
        printf "#        - src/Kernel.php\n"
        printf "#    ergebnis:\n"
        printf "#        classesAllowedToBeExtended:\n"
        printf "#            - InvalidArgumentException\n"
        printf "#includes:\n"
        printf "#    - /usr/lib/tools/phpstan/vendor/brainbits/phpstan-rules/rules.neon\n"
        printf "#    - /usr/lib/tools/phpstan/vendor/ergebnis/phpstan-rules/rules.neon\n"
        printf "#    - /usr/lib/tools/phpstan/vendor/ikvasnica/phpstan-clean-test/rules.neon\n"
        printf "#    - /usr/lib/tools/phpstan/vendor/jangregor/phpstan-prophecy/extension.neon\n"
        printf "#    - /usr/lib/tools/phpstan/vendor/mglaman/phpstan-drupal/extension.neon\n"
        printf "#    - /usr/lib/tools/phpstan/vendor/pepakriz/phpstan-exception-rules/extension.neon\n"
        printf "#    - /usr/lib/tools/phpstan/vendor/phpstan/phpstan-beberlei-assert/extension.neon\n"
        printf "#    - /usr/lib/tools/phpstan/vendor/phpstan/phpstan-deprecation-rules/rules.neon\n"
        printf "#    - /usr/lib/tools/phpstan/vendor/phpstan/phpstan-doctrine/rules.neon\n"
        printf "#    - /usr/lib/tools/phpstan/vendor/phpstan/phpstan-doctrine/extension.neon\n"
        printf "#    - /usr/lib/tools/phpstan/vendor/phpstan/phpstan-phpunit/rules.neon\n"
        printf "#    - /usr/lib/tools/phpstan/vendor/phpstan/phpstan-phpunit/extension.neon\n"
        printf "#    - /usr/lib/tools/phpstan/vendor/phpstan/phpstan-strict-rules/rules.neon\n"
        printf "#    - /usr/lib/tools/phpstan/vendor/phpstan/phpstan-symfony/rules.neon\n"
        printf "#    - /usr/lib/tools/phpstan/vendor/phpstan/phpstan-symfony/extension.neon\n"
        printf "#    - /usr/lib/tools/phpstan/vendor/phpstan/phpstan-webmozart-assert/extension.neon\n"
        printf "#    - /usr/lib/tools/phpstan/vendor/thecodingmachine/phpstan-safe-rule/phpstan-safe-rule.neon\n"
        printf "#    - /usr/lib/tools/phpstan/vendor/thecodingmachine/phpstan-strict-rules/phpstan-strict-rules.neon\n"
        printf "</snip>\n"
        printf "Save it as ${success}phpstan.neon.dist${reset} in your project root dir.\n"

        exit 1
    fi

    if [ -n "${STATIC_ANALYSIS_REPORT_FILE}" ]; then
        mkdir -p "$(dirname ${STATIC_ANALYSIS_REPORT_FILE})"
        json="$(${BIN_DIR}/wrapper/devtools-phpstan analyze --no-progress --error-format=gitlab)"
        exitCode=$?
        (echo "${json}" | sed "s_#!/usr/bin/env php__g") > ${STATIC_ANALYSIS_REPORT_FILE}
        exit ${exitCode}
    fi

    cmd="analyze"

    if [ -n "${CI}" ]; then
        cmd="${cmd} --no-progress"
    fi
fi

"$(wrapper phpstan ${PHPSTAN_CMD:-phpstan})" ${cmd}
