#!/usr/bin/env sh

# requireEnv <name>
requireEnv() {
    name="$1"
    if eval "[ \"\$$name\" = \"\" ]"; then
        printf "${failure}Need ${failure_name}%s${failure} environment variable${reset}\n" "${name}"
        exit 1
    fi
}

# showCmd <cmd>
showCmd() {
    cmd="${1}"
    if [ "${SHOW_CMD}" = "1" ]; then
        printf "${command}$ %s${reset}\n" "${cmd}"
    fi
}

# include a local configuration file and the related user configuration file
includeLocalConfig() {
    configName="${1}"
    shift 1

    if [ -f "${BIN_DIR}/local/include-${configName}" ]; then
        if [ "${SHOW_CMD}" = "1" ]; then
            >&2 printf "${command}Include local config ${command_name}${BIN_DIR}/local/include-${configName}${reset}\n"
        fi

        . "${BIN_DIR}/local/include-${configName}"
    fi

    if [ -f "${BIN_DIR}/local/include-${configName}-user" ]; then
        if [ "${SHOW_CMD}" = "1" ]; then
            >&2 printf "${command}Include local config ${command_name}${BIN_DIR}/local/include-${configName}-user${reset}\n"
        fi

        . "${BIN_DIR}/local/include-${configName}-user"
    fi
}

# interactiveTty
interactiveTty() {
    if [ -t 0 ]; then
        echo "--interactive --tty"
    fi
}

# pullImage <image>
pullImage() {
    image="${1}"
    if [ -n "${image}" ] && [ -z "${NO_PULL}" ]; then
        docker pull -q "${image}"
    fi
}

# wrapper <wrapperName> <localName>
wrapper() {
  wrapperName="${1}"
  localName="${2}"
  if [ -z "${wrapperName}" ]; then
    >&2 printf "${failure}No wrapperName given in wrapper()${reset}\n"
    >&2 printf "Args:\n"
    echo "echo"
    exit 1
  fi
  if [ -z "${localName}" ]; then
    >&2 printf "${failure}No localName given in wrapper()${reset}\n"
    >&2 printf "Args:\n"
    echo "echo"
    exit 1
  fi

  if [ -z ${NO_LOCAL} ] && [ -n "${LOCAL_WRAPPER_DIR}" ] && [ -f "${LOCAL_WRAPPER_DIR}/bin/${localName}" ]; then
    localPath="${LOCAL_WRAPPER_DIR}/bin/${localName}"
    >&2 printf "${command}local ${command_name}${localPath}${reset}\n"
    echo "${localPath}"
  else
    wrapperPath="${BIN_DIR}/wrapper/devtools-${wrapperName}"
    >&2 printf "${command}wrapper ${command_name}${wrapperPath}${reset}\n"
    echo "${wrapperPath}"
  fi
}
